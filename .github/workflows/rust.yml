name: Rust

on:
  push:
    branches: [main]
  pull_request:
    branches: ["*"]
  merge_group:

jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-latest, ubuntu-22.04, macos-latest]
        include:
          - os: ubuntu-latest
            run_no_std: true
            run_lint: true

    runs-on: ${{ matrix.os }}

    env:
      RUST_BACKTRACE: 1

    steps:
      - uses: actions/checkout@v2
      - name: Checkout submodules
        shell: bash
        run: |
          auth_header="$(git config --local --get http.https://github.com/.extraheader)"
          git submodule sync --recursive
          git -c "http.extraheader=$auth_header" -c protocol.version=2 \
              submodule update --init --force --recursive --depth=1
      - name: Run tests
        run: cargo test --color=always -- --color=always

      - name: Run tests with all features
        run: cargo test --all-features --color=always -- --color=always

      - name: Check with no default features
        run: cargo check --no-default-features --color=always

      - name: Install no_std toolchain
        if: ${{ matrix.run_no_std }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          target: thumbv7m-none-eabi

      - name: Verify builds on no_std no features
        if: ${{ matrix.run_no_std }}
        run: |
          cargo clean
          cargo build --no-default-features --target thumbv7m-none-eabi

      - name: Verify cargo publish includes all files needed to build
        run: |
          cargo vendor

          cargo package -p chinese-telegraph --config "source.vendored-sources.directory = 'vendor'" \
             --config "source.crates-io.replace-with = 'vendored-sources'"

  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Checkout submodules
        shell: bash
        run: |
          auth_header="$(git config --local --get http.https://github.com/.extraheader)"
          git submodule sync --recursive
          git -c "http.extraheader=$auth_header" -c protocol.version=2 \
              submodule update --init --force --recursive --depth=1

      - name: clippy
        run: cargo clippy --color=always

      - name: rustfmt
        run: cargo fmt -- --color=always --check

  msrv:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Checkout submodules
        shell: bash
        run: |
          auth_header="$(git config --local --get http.https://github.com/.extraheader)"
          git submodule sync --recursive
          git -c "http.extraheader=$auth_header" -c protocol.version=2 \
              submodule update --init --force --recursive --depth=1

      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: 1.66.0
      - run: cargo check --lib
